{"version":3,"sources":["components/mindar-image-target-averaging.js","components/click-interaction.js","components/sound-control.js","components/animation-mixer.js","components/WelcomePanel.js","MindarViewer.js","App.js","reportWebVitals.js","index.js"],"names":["AFRAME","registerComponent","dependencies","schema","targetIndex","type","postMatrix","pastPositions","pastScales","init","this","el","sceneEl","systems","registerAnchor","data","root","object3D","visible","matrixAutoUpdate","setupMarker","markerWidth","markerHeight","position","THREE","Vector3","quaternion","Quaternion","scale","x","y","z","Matrix4","compose","updateWorldMatrix","worldMatrix","emit","ui","showScanning","m","elements","multiply","position0","quaternion0","scale0","matrix","decompose","push","length","slice","forEach","v","add","divideScalar","angleTo","Math","PI","slerp","animal","isAnimationPlaying","isSoundPlaying","shouldPlayHohoho","component","soundEl","document","querySelector","sound","components","soundEndCallback","console","log","setAttribute","parentNode","addEventListener","e","removeAttribute","stopSound","removeEventListener","model","target","animations","baseAnimation","splice","playSound","animationFinishCallback","sort","random","modelEl","clips","map","name","loop","pauseSound","LoopMode","once","LoopOnce","repeat","LoopRepeat","pingpong","LoopPingPong","multiple","default","duration","clampWhenFinished","crossFadeDuration","oneOf","Object","keys","repetitions","Infinity","min","timeScale","mixer","activeActions","getObject3D","load","detail","AnimationMixer","action","loopDelta","direction","update","remove","stopAllAction","prevData","changes","utils","diff","stopAction","playAction","setDuration","setLoop","setEffectiveTimeScale","i","fadeOut","stop","geometry","clip","includes","clipAction","enabled","fadeIn","play","tick","t","dt","isNaN","WelcomePanel","onClick","style","width","height","zIndex","backgroundColor","display","flexDirection","alignItems","justifyContent","soundEffect","Audio","autoplay","src","flexGrow","alt","maxHeight","maxWidth","aspectRatio","marginBottom","color","fontWeight","flexBasis","lineHeight","textTransform","fontSize","animals","MindARViewer","useState","showWelcome","setShowWelcome","className","renderer","id","preload","class","light","cursor","raycaster","positional","rotation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"0PAGAA,IAAOC,kBAAkB,gCAAiC,CACxDC,aAAc,CAAC,uBAEfC,OAAQ,CACNC,YAAa,CAAEC,KAAM,WAGvBC,WAAY,KAEZC,cAAe,GACfC,WAAY,GAEZC,KAAM,WACaC,KAAKC,GAAGC,QAAQC,QAAQ,uBAChCC,eAAeJ,KAAMA,KAAKK,KAAKX,aAExC,IAAMY,EAAON,KAAKC,GAAGM,SACrBD,EAAKE,SAAU,EACfF,EAAKG,kBAAmB,CAC1B,EAEAC,YAAW,YAA+B,IAAD,mBAA5BC,EAAW,KAAEC,EAAY,KAC9BC,EAAW,IAAIvB,IAAOwB,MAAMC,QAC5BC,EAAa,IAAI1B,IAAOwB,MAAMG,WAC9BC,EAAQ,IAAI5B,IAAOwB,MAAMC,QAC/BF,EAASM,EAAIR,EAAc,EAC3BE,EAASO,EAAIT,EAAc,GAAKC,EAAeD,GAAe,EAC9DO,EAAMC,EAAIR,EACVO,EAAME,EAAIT,EACVO,EAAMG,EAAIV,EACVX,KAAKJ,WAAa,IAAIN,IAAOwB,MAAMQ,QACnCtB,KAAKJ,WAAW2B,QAAQV,EAAUG,EAAYE,EAChD,EAEAM,kBAAiB,SAACC,GAChB,GAAKzB,KAAKC,GAAGM,SAASC,SAA2B,OAAhBiB,GAE1B,GAAIzB,KAAKC,GAAGM,SAASC,SAA2B,OAAhBiB,EAAsB,CAC3DzB,KAAKC,GAAGyB,KAAK,cACI1B,KAAKC,GAAGC,QAAQC,QAAQ,uBAChCwB,GAAGC,cACd,OALE5B,KAAKC,GAAGyB,KAAK,eAQf,GADA1B,KAAKC,GAAGM,SAASC,QAA0B,OAAhBiB,EACP,OAAhBA,EAAJ,CAGA,IAAII,EAAI,IAAIvC,IAAOwB,MAAMQ,QACzBO,EAAEC,SAAWL,EACbI,EAAEE,SAAS/B,KAAKJ,YAEhB,IAAIoC,EAAY,IAAIjB,IAChBkB,EAAc,IAAIhB,IAClBiB,EAAS,IAAInB,IACjBf,KAAKC,GAAGM,SAAS4B,OAAOC,UAAUJ,EAAWC,EAAaC,GAE1D,IAAIrB,EAAW,IAAIE,IACfC,EAAa,IAAIC,IACjBC,EAAQ,IAAIH,IAChBc,EAAEO,UAAUvB,EAAUG,EAAYE,GAElClB,KAAKH,cAAcwC,KAAKxB,GAEpBb,KAAKH,cAAcyC,OAAS,KAC9BtC,KAAKH,cAAgBG,KAAKH,cAAc0C,MACtCvC,KAAKH,cAAcyC,OAAS,GAC5BtC,KAAKH,cAAcyC,SAIvBzB,EAAW,IAAIE,IAAQ,EAAG,EAAG,GAE7Bf,KAAKH,cAAc2C,SAAQ,SAACC,GAC1B5B,EAAS6B,IAAID,EACf,IAEA5B,EAAS8B,aAAa3C,KAAKH,cAAcyC,QAGvCtB,EADEiB,EAAYW,QAAQ5B,GAAe6B,KAAKC,GAAK,IAAO,EACzCb,EAEAA,EAAYc,MAAM/B,EAAY,IAG7ChB,KAAKF,WAAWuC,KAAKnB,GAEjBlB,KAAKF,WAAWwC,OAAS,KAC3BtC,KAAKF,WAAaE,KAAKF,WAAWyC,MAChCvC,KAAKF,WAAWwC,OAAS,GACzBtC,KAAKF,WAAWwC,SAIpBpB,EAAQ,IAAIH,IAAQ,EAAG,EAAG,GAE1Bf,KAAKF,WAAW0C,SAAQ,SAACC,GACvBvB,EAAMwB,IAAID,EACZ,IAEAvB,EAAMyB,aAAa3C,KAAKF,WAAWwC,QAEnCtC,KAAKC,GAAGM,SAAS4B,QAAS,IAAIb,KAAUC,QACtCV,EACAG,EACAE,EA1DF,CA4DF,I,YC3GF3B,4BAAkB,oBAAqB,CACrCE,OAAQ,CACNuD,OAAQ,CAAErD,KAAM,WAGlBsD,oBAAoB,EAEpBC,gBAAgB,EAEhBC,kBAAkB,EAElBpD,KAAM,WAAa,IAAD,OACVE,EAAKD,KAAKC,GACV+C,EAAShD,KAAKK,KAAK2C,OACrBI,EAAYpD,KACZqD,EAAUC,SAASC,cAAc,iBACjCC,EAAQH,EAAQI,WAAWD,MAE3BE,EAAmB,WACrBC,QAAQC,IAAI,eACZR,EAAUF,gBAAiB,EAC3BG,EAAQQ,aACN,MAAM,cAAD,OACST,EAAUD,iBAAmB,SAAWH,IAExDI,EAAUD,kBAAoBC,EAAUD,gBAC1C,EAEAlD,EAAG6D,WAAWC,iBAAiB,eAAe,SAACC,GAC7CX,EAAQQ,aAAa,MAAM,cAAD,OAAgBb,IAC1CI,EAAUD,kBAAmB,EAC7BlD,EAAG4D,aAAa,iBAAkB,IAClCR,EAAQU,iBAAiB,cAAeL,GACxCC,QAAQC,IAAI,cACd,IAEA3D,EAAG6D,WAAWC,iBAAiB,cAAc,WAC3C9D,EAAGgE,gBAAgB,kBACnBT,EAAMU,YACN,EAAKhB,gBAAiB,EACtBG,EAAQc,oBAAoB,cAAeT,GAC3CC,QAAQC,IAAI,aACd,IAEe,SAAXZ,GAAgC,WAAXA,GACvBM,SACGC,cAAc,IAAD,OAAKP,IAClBe,iBAAiB,gBAAgB,SAACC,GACjC,IAAII,EAAQJ,EAAEK,OAAOZ,WAAW,cAAcW,MAC9ChB,EAAUkB,WAAU,YAAOF,EAAME,YACjClB,EAAUmB,cAAgBnB,EAAUkB,WAAWE,OAAO,EAAG,EAC3D,IAGJvE,EAAG8D,iBAAiB,SAAS,SAAUC,GAErC,GAAIZ,EAAUH,oBAAsBG,EAAUF,eAC5CS,QAAQC,IAAI,0BADd,CAKAJ,EAAMiB,YACNrB,EAAUF,gBAAiB,EAE3B,IAAIwB,EAA0B,SAA1BA,EAA2BV,GAC7BL,QAAQC,IAAI,mBACZR,EAAUH,oBAAqB,EAC/Be,EAAEK,OAAOF,oBACP,qBACAO,EAEJ,EAEA,GAAe,SAAX1B,EAAmB,CACrBI,EAAUkB,WAAWK,MAAK,kBAAM9B,KAAK+B,SAAW,EAAG,IACnDxB,EAAUH,oBAAqB,EAE/B,IAAM4B,EAAUvB,SAASC,cAAc,SACvCsB,EAAQhB,aAAa,qBAAsB,CACzCiB,MAAO1B,EAAUkB,WAAW/B,MAAM,EAAG,GAAGwC,KAAI,SAACtC,GAAC,OAAKA,EAAEuC,IAAI,IACzDC,KAAM,SAGRJ,EAAQd,iBAAiB,qBAAsBW,EACjD,CAEA,GAAe,WAAX1B,EAAqB,CACvBI,EAAUH,oBAAqB,EAE/B,IAAM4B,EAAUvB,SAASC,cAAc,WACvCsB,EAAQZ,gBAAgB,sBACxBY,EAAQhB,aAAa,qBAAsB,CACzCiB,MAAO,YAAI1B,EAAUkB,YAAYS,KAAI,SAACtC,GAAC,OAAKA,EAAEuC,IAAI,IAClDC,KAAM,SAGRJ,EAAQd,iBAAiB,qBAAsBW,EACjD,CAtCA,CAuCF,GACF,ICnGFnF,4BAAkB,gBAAiB,CACjCQ,KAAM,WACJ,IAAME,EAAKD,KAAKC,GACZuD,EAAQF,SAASC,cAAc,UAAUE,WAAWD,MACxDvD,EAAG6D,WAAWC,iBAAiB,eAAe,SAACC,GAC7CR,EAAMiB,WACR,IACAxE,EAAG6D,WAAWC,iBAAiB,cAAc,WAC3CP,EAAM0B,YACR,GACF,ICVF,IAAMC,EAAW,CACfC,KAAMtE,QAAMuE,SACZC,OAAQxE,QAAMyE,WACdC,SAAU1E,QAAM2E,cAUlBlG,4BAAkB,kBAAmB,CACnCmG,UAAU,EACVjG,OAAQ,CACNqF,MAAO,CAAEa,QAAS,GAAIhG,KAAM,SAC5BiG,SAAU,CAAED,QAAS,GACrBE,kBAAmB,CAAEF,SAAS,EAAOhG,KAAM,WAC3CmG,kBAAmB,CAAEH,QAAS,GAC9BV,KAAM,CAAEU,QAAS,SAAUI,MAAOC,OAAOC,KAAKd,IAC9Ce,YAAa,CAAEP,QAASQ,IAAUC,IAAK,GACvCC,UAAW,CAAEV,QAAS,IAGxB5F,KAAM,WAAa,IAAD,OAEhBC,KAAKoE,MAAQ,KAEbpE,KAAKsG,MAAQ,KAEbtG,KAAKuG,cAAgB,GAErB,IAAMnC,EAAQpE,KAAKC,GAAGuG,YAAY,QAE9BpC,EACFpE,KAAKyG,KAAKrC,GAEVpE,KAAKC,GAAG8D,iBAAiB,gBAAgB,SAACC,GACxC,EAAKyC,KAAKzC,EAAE0C,OAAOtC,MACrB,GAEJ,EAEAqC,KAAM,SAAUrC,GACd,IAAMnE,EAAKD,KAAKC,GAChBD,KAAKoE,MAAQA,EACbpE,KAAKsG,MAAQ,IAAIxF,QAAM6F,eAAevC,GACtCpE,KAAKsG,MAAMvC,iBAAiB,QAAQ,SAACC,GACnC/D,EAAGyB,KAAK,iBAAkB,CAAEkF,OAAQ5C,EAAE4C,OAAQC,UAAW7C,EAAE6C,WAC7D,IACA7G,KAAKsG,MAAMvC,iBAAiB,YAAY,SAACC,GACvC/D,EAAGyB,KAAK,qBAAsB,CAC5BkF,OAAQ5C,EAAE4C,OACVE,UAAW9C,EAAE8C,WAEjB,IACI9G,KAAKK,KAAKyE,OAAO9E,KAAK+G,OAAO,CAAC,EACpC,EAEAC,OAAQ,WACFhH,KAAKsG,OAAOtG,KAAKsG,MAAMW,eAC7B,EAEAF,OAAQ,SAAUG,GAChB,GAAKA,EAAL,CAEA,IAAM7G,EAAOL,KAAKK,KACZ8G,EAAUC,QAAMC,KAAKhH,EAAM6G,GAGjC,GAAI,UAAWC,EAGb,OAFAnH,KAAKsH,kBACDjH,EAAKyE,OAAO9E,KAAKuH,cAKvBvH,KAAKuG,cAAc/D,SAAQ,SAACoE,GACtB,aAAcO,GAAW9G,EAAKuF,UAChCgB,EAAOY,YAAYnH,EAAKuF,UAEtB,sBAAuBuB,IACzBP,EAAOf,kBAAoBxF,EAAKwF,oBAE9B,SAAUsB,GAAW,gBAAiBA,IACxCP,EAAOa,QAAQtC,EAAS9E,EAAK4E,MAAO5E,EAAK6F,aAEvC,cAAeiB,GACjBP,EAAOc,sBAAsBrH,EAAKgG,UAEtC,GA1BqB,CA2BvB,EAEAiB,WAAY,WAEV,IADA,IAAMjH,EAAOL,KAAKK,KACTsH,EAAI,EAAGA,EAAI3H,KAAKuG,cAAcjE,OAAQqF,IAC7CtH,EAAKyF,kBACD9F,KAAKuG,cAAcoB,GAAGC,QAAQvH,EAAKyF,mBACnC9F,KAAKuG,cAAcoB,GAAGE,OAE5B7H,KAAKuG,cAAcjE,OAAS,CAC9B,EAEAiF,WAAY,WACV,GAAKvH,KAAKsG,MAAV,CAEA,IAAMlC,EAAQpE,KAAKoE,MACjB/D,EAAOL,KAAKK,KACZyE,EAAQV,EAAME,aAAeF,EAAM0D,UAAY,CAAC,GAAGxD,YAAc,GAEnE,GAAKQ,EAAMxC,OAIX,IAAK,IAAIyF,EAAMJ,EAAI,EAAII,EAAOjD,EAAM6C,GAAKA,IACvC,GAA0B,IAAtBtH,EAAKyE,MAAMxC,QAAgBjC,EAAKyE,MAAMkD,SAASD,EAAK/C,MAAO,CAC7D,IAAM4B,EAAS5G,KAAKsG,MAAM2B,WAAWF,EAAM3D,GAC3CwC,EAAOsB,SAAU,EACjBtB,EAAOf,kBAAoBxF,EAAKwF,kBAC5BxF,EAAKuF,UAAUgB,EAAOY,YAAYnH,EAAKuF,UACpB,IAAnBvF,EAAKgG,WAAiBO,EAAOc,sBAAsBrH,EAAKgG,WAC5DO,EACGa,QAAQtC,EAAS9E,EAAK4E,MAAO5E,EAAK6F,aAClCiC,OAAO9H,EAAKyF,mBACZsC,OACHpI,KAAKuG,cAAclE,KAAKuE,EAC1B,CAtBqB,CAwBzB,EAEAyB,KAAM,SAAUC,EAAGC,GACbvI,KAAKsG,QAAUkC,MAAMD,IAAKvI,KAAKsG,MAAMS,OAAOwB,EAAK,IACvD,I,WC5EaE,EA3DM,SAAH,GAAqB,IAAfC,EAAO,EAAPA,QACtB,OACE,sBACEC,MAAO,CACLC,MAAO,QACPC,OAAQ,QACRhI,SAAU,QACViI,OAAQ,IACRC,gBAAiB,UACjBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,YAElBT,QAAS,WACP,IAAMU,EAAc,IAAIC,MACxBD,EAAYE,UAAW,EAIvBF,EAAYG,IACV,0oBACK,OAAPb,QAAO,IAAPA,MACF,EAAE,UAEF,sBAAMC,MAAO,CAAEa,SAAU,KACzB,qBACED,IAAI,wCACJE,IAAI,OACJd,MAAO,CACLe,UAAW,MACXC,SAAU,MACVC,YAAa,YACbC,aAAc,MAGlB,sBAAMlB,MAAO,CAAEa,SAAU,KACzB,sBACEb,MAAO,CACLmB,MAAO,UACPC,WAAY,OACZC,UAAW,EACXC,WAAY,IACZC,cAAe,YACfC,SAAU,UACV,4BAIJ,sBAAMxB,MAAO,CAAEa,SAAU,KACzB,qBACED,IAAI,qCACJE,IAAI,OACJd,MAAO,CAAEe,UAAW,MAAOC,SAAU,MAAOC,YAAa,SAIjE,EClDMQ,EAAU,CACd,QACA,KACA,QACA,SACA,SACA,QACA,QACA,OACA,SACA,UACA,MACA,OA+HaC,EA5HM,WACnB,MAAsCC,oBAAS,GAAK,mBAA7CC,EAAW,KAAEC,EAAc,KAElC,OACE,qBAAKC,UAAU,YAAW,SACvBF,EACC,cAAC,EAAY,CACX7B,QAAS,WACP8B,GAAe,EACjB,IAGF,0BACE,yEAGA,cAAY,OACZE,SAAS,iDACT,aAAW,iBACX,mCAAiC,iBAAgB,UAEjD,qCACE,8BACEC,GAAG,OACHpB,IAAI,iCAELa,EAAQrF,KAAI,SAACtC,EAAGkF,GAAC,OAChB,8BAEEgD,GAAI,SAAWlI,EACf8G,IAAG,8BAAyB9G,EAAC,SAFxBA,EAGS,IAElB,8BACEkI,GAAG,YACHC,QAAQ,OACRC,MAAM,UACNtB,IAAI,8BACJ,gBAAc,gBAEhB,8BACEoB,GAAG,mBACHC,QAAQ,OACRC,MAAM,UACNtB,IAAI,iCACJ,gBAAc,gBAEfa,EAAQrF,KAAI,SAACtC,EAAGkF,GAAC,OAChB,8BACEgD,GAAI,aAAelI,EACnBmI,QAAQ,OACRC,MAAM,UAENtB,IAAG,8BAAyB9G,EAAC,QAC7B,gBAAc,eAFTA,EAGS,OAGpB,0BAAUqI,MAAM,+BAChB,0BACEA,MAAM,+CACNjK,SAAS,UAEX,0BACEA,SAAS,QACT,gBAAc,iBACdkK,OAAO,iCACPC,UAAU,2CAEZ,yBACEL,GAAG,QACHpB,IAAI,aACJtE,KAAK,OACLgG,WAAW,UAEb,yBACEN,GAAG,eACHpB,IAAI,GACJtE,KAAK,QACLgG,WAAW,UAYZb,EAAQrF,KAAI,SAACtC,EAAGkF,GAAC,OAChB,2BAEE,uDAA+CA,GAAI,UAEnD,8BACEgD,GAAIlI,EACJyI,SAAS,QACTrK,SAAS,QACTK,MAAM,cACNqI,IAAG,iBAAY9G,GACf,mBAGA,kBAAgB,qBAElB,8BACEkI,GAAIlI,EAAI,QACRyI,SAAS,QACTrK,SAAS,QACTK,MAAM,cACNqI,IAAI,QACJ,kBAAgB,mBAChB,sCAA8B9G,OArB3BA,EAuBI,QAMvB,EC9He0I,MAVf,WACE,OACE,qBAAKV,UAAU,MAAK,SAClB,qBAAKA,UAAU,YAAW,SACxB,cAAC,EAAY,OAIrB,ECJeW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,E,QCHAQ,IAASC,OACP,cAAC,IAAU,UACT,cAAC,EAAG,MAENxI,SAASyI,eAAe,SAM1BX,G","file":"static/js/main.9121f27f.chunk.js","sourcesContent":["import AFRAME from \"aframe\";\nimport { Vector3, Quaternion, Matrix4 } from \"three\";\n\nAFRAME.registerComponent(\"mindar-image-target-averaging\", {\n  dependencies: [\"mindar-image-system\"],\n\n  schema: {\n    targetIndex: { type: \"number\" },\n  },\n\n  postMatrix: null, // rescale the anchor to make width of 1 unit = physical width of card\n\n  pastPositions: [],\n  pastScales: [],\n\n  init: function () {\n    const arSystem = this.el.sceneEl.systems[\"mindar-image-system\"];\n    arSystem.registerAnchor(this, this.data.targetIndex);\n\n    const root = this.el.object3D;\n    root.visible = false;\n    root.matrixAutoUpdate = false;\n  },\n\n  setupMarker([markerWidth, markerHeight]) {\n    const position = new AFRAME.THREE.Vector3();\n    const quaternion = new AFRAME.THREE.Quaternion();\n    const scale = new AFRAME.THREE.Vector3();\n    position.x = markerWidth / 2;\n    position.y = markerWidth / 2 + (markerHeight - markerWidth) / 2;\n    scale.x = markerWidth;\n    scale.y = markerWidth;\n    scale.z = markerWidth;\n    this.postMatrix = new AFRAME.THREE.Matrix4();\n    this.postMatrix.compose(position, quaternion, scale);\n  },\n\n  updateWorldMatrix(worldMatrix) {\n    if (!this.el.object3D.visible && worldMatrix !== null) {\n      this.el.emit(\"targetFound\");\n    } else if (this.el.object3D.visible && worldMatrix === null) {\n      this.el.emit(\"targetLost\");\n      const arSystem = this.el.sceneEl.systems[\"mindar-image-system\"];\n      arSystem.ui.showScanning();\n    }\n\n    this.el.object3D.visible = worldMatrix !== null;\n    if (worldMatrix === null) {\n      return;\n    }\n    var m = new AFRAME.THREE.Matrix4();\n    m.elements = worldMatrix;\n    m.multiply(this.postMatrix);\n\n    let position0 = new Vector3();\n    let quaternion0 = new Quaternion();\n    let scale0 = new Vector3();\n    this.el.object3D.matrix.decompose(position0, quaternion0, scale0);\n\n    let position = new Vector3();\n    let quaternion = new Quaternion();\n    let scale = new Vector3();\n    m.decompose(position, quaternion, scale);\n\n    this.pastPositions.push(position);\n\n    if (this.pastPositions.length > 10) {\n      this.pastPositions = this.pastPositions.slice(\n        this.pastPositions.length - 10,\n        this.pastPositions.length\n      );\n    }\n\n    position = new Vector3(0, 0, 0);\n\n    this.pastPositions.forEach((v) => {\n      position.add(v);\n    });\n\n    position.divideScalar(this.pastPositions.length);\n\n    if (quaternion0.angleTo(quaternion) < (Math.PI / 180) * 5) {\n      quaternion = quaternion0;\n    } else {\n      quaternion = quaternion0.slerp(quaternion, 0.2);\n    }\n\n    this.pastScales.push(scale);\n\n    if (this.pastScales.length > 10) {\n      this.pastScales = this.pastScales.slice(\n        this.pastScales.length - 10,\n        this.pastScales.length\n      );\n    }\n\n    scale = new Vector3(0, 0, 0);\n\n    this.pastScales.forEach((v) => {\n      scale.add(v);\n    });\n\n    scale.divideScalar(this.pastScales.length);\n\n    this.el.object3D.matrix = new Matrix4().compose(\n      position,\n      quaternion,\n      scale\n    );\n  },\n});\n","import { registerComponent, THREE } from \"aframe\";\n\nregisterComponent(\"click-interaction\", {\n  schema: {\n    animal: { type: \"string\" },\n  },\n\n  isAnimationPlaying: false,\n\n  isSoundPlaying: false,\n\n  shouldPlayHohoho: false,\n\n  init: function () {\n    const el = this.el;\n    const animal = this.data.animal;\n    let component = this;\n    let soundEl = document.querySelector(`#sound_animal`);\n    let sound = soundEl.components.sound;\n\n    let soundEndCallback = () => {\n      console.log(\"sound ended\");\n      component.isSoundPlaying = false;\n      soundEl.setAttribute(\n        \"src\",\n        `#sound_src_${component.shouldPlayHohoho ? \"hohoho\" : animal}`\n      );\n      component.shouldPlayHohoho = !component.shouldPlayHohoho;\n    };\n\n    el.parentNode.addEventListener(\"targetFound\", (e) => {\n      soundEl.setAttribute(\"src\", `#sound_src_${animal}`);\n      component.shouldPlayHohoho = true;\n      el.setAttribute(\"data-clickable\", \"\");\n      soundEl.addEventListener(\"sound-ended\", soundEndCallback);\n      console.log(\"targetFound\");\n    });\n\n    el.parentNode.addEventListener(\"targetLost\", () => {\n      el.removeAttribute(\"data-clickable\");\n      sound.stopSound();\n      this.isSoundPlaying = false;\n      soundEl.removeEventListener(\"sound-ended\", soundEndCallback);\n      console.log(\"targetLost\");\n    });\n\n    if (animal === \"goat\" || animal === \"rabbit\") {\n      document\n        .querySelector(`#${animal}`)\n        .addEventListener(\"model-loaded\", (e) => {\n          let model = e.target.components[\"gltf-model\"].model;\n          component.animations = [...model.animations];\n          component.baseAnimation = component.animations.splice(0, 1);\n        });\n    }\n\n    el.addEventListener(\"click\", function (e) {\n      // console.log(\"clicked\");\n      if (component.isAnimationPlaying || component.isSoundPlaying) {\n        console.log(\"ignore, is playing\");\n        return;\n      }\n\n      sound.playSound();\n      component.isSoundPlaying = true;\n\n      let animationFinishCallback = (e) => {\n        console.log(\"animation ended\");\n        component.isAnimationPlaying = false;\n        e.target.removeEventListener(\n          \"animation-finished\",\n          animationFinishCallback\n        );\n      };\n\n      if (animal === \"goat\") {\n        component.animations.sort(() => Math.random() - 0.5);\n        component.isAnimationPlaying = true;\n\n        const modelEl = document.querySelector(\"#goat\");\n        modelEl.setAttribute(\"animation-mixer__0\", {\n          clips: component.animations.slice(0, 3).map((v) => v.name),\n          loop: \"once\",\n        });\n\n        modelEl.addEventListener(\"animation-finished\", animationFinishCallback);\n      }\n\n      if (animal === \"rabbit\") {\n        component.isAnimationPlaying = true;\n\n        const modelEl = document.querySelector(\"#rabbit\");\n        modelEl.removeAttribute(\"animation-mixer__0\");\n        modelEl.setAttribute(\"animation-mixer__0\", {\n          clips: [...component.animations].map((v) => v.name),\n          loop: \"once\",\n        });\n\n        modelEl.addEventListener(\"animation-finished\", animationFinishCallback);\n      }\n    });\n  },\n});\n","import { registerComponent } from \"aframe\";\n\nregisterComponent(\"sound-control\", {\n  init: function () {\n    const el = this.el;\n    let sound = document.querySelector(\"#sound\").components.sound;\n    el.parentNode.addEventListener(\"targetFound\", (e) => {\n      sound.playSound();\n    });\n    el.parentNode.addEventListener(\"targetLost\", () => {\n      sound.pauseSound();\n    });\n  },\n});\n","import { registerComponent, THREE, utils } from \"aframe\";\n\nconst LoopMode = {\n  once: THREE.LoopOnce,\n  repeat: THREE.LoopRepeat,\n  pingpong: THREE.LoopPingPong,\n};\n\n/**\n * animation-mixer\n *\n * Player for animation clips. Intended to be compatible with any model format that supports\n * skeletal or morph animations through THREE.AnimationMixer.\n * See: https://threejs.org/docs/?q=animation#Reference/Animation/AnimationMixer\n */\nregisterComponent(\"animation-mixer\", {\n  multiple: true,\n  schema: {\n    clips: { default: [], type: \"array\" },\n    duration: { default: 0 },\n    clampWhenFinished: { default: false, type: \"boolean\" },\n    crossFadeDuration: { default: 0 },\n    loop: { default: \"repeat\", oneOf: Object.keys(LoopMode) },\n    repetitions: { default: Infinity, min: 0 },\n    timeScale: { default: 1 },\n  },\n\n  init: function () {\n    /** @type {THREE.Mesh} */\n    this.model = null;\n    /** @type {THREE.AnimationMixer} */\n    this.mixer = null;\n    /** @type {Array<THREE.AnimationAction>} */\n    this.activeActions = [];\n\n    const model = this.el.getObject3D(\"mesh\");\n\n    if (model) {\n      this.load(model);\n    } else {\n      this.el.addEventListener(\"model-loaded\", (e) => {\n        this.load(e.detail.model);\n      });\n    }\n  },\n\n  load: function (model) {\n    const el = this.el;\n    this.model = model;\n    this.mixer = new THREE.AnimationMixer(model);\n    this.mixer.addEventListener(\"loop\", (e) => {\n      el.emit(\"animation-loop\", { action: e.action, loopDelta: e.loopDelta });\n    });\n    this.mixer.addEventListener(\"finished\", (e) => {\n      el.emit(\"animation-finished\", {\n        action: e.action,\n        direction: e.direction,\n      });\n    });\n    if (this.data.clips) this.update({});\n  },\n\n  remove: function () {\n    if (this.mixer) this.mixer.stopAllAction();\n  },\n\n  update: function (prevData) {\n    if (!prevData) return;\n\n    const data = this.data;\n    const changes = utils.diff(data, prevData);\n\n    // If selected clips have changed, restart animation.\n    if (\"clips\" in changes) {\n      this.stopAction();\n      if (data.clips) this.playAction();\n      return;\n    }\n\n    // Otherwise, modify running actions.\n    this.activeActions.forEach((action) => {\n      if (\"duration\" in changes && data.duration) {\n        action.setDuration(data.duration);\n      }\n      if (\"clampWhenFinished\" in changes) {\n        action.clampWhenFinished = data.clampWhenFinished;\n      }\n      if (\"loop\" in changes || \"repetitions\" in changes) {\n        action.setLoop(LoopMode[data.loop], data.repetitions);\n      }\n      if (\"timeScale\" in changes) {\n        action.setEffectiveTimeScale(data.timeScale);\n      }\n    });\n  },\n\n  stopAction: function () {\n    const data = this.data;\n    for (let i = 0; i < this.activeActions.length; i++) {\n      data.crossFadeDuration\n        ? this.activeActions[i].fadeOut(data.crossFadeDuration)\n        : this.activeActions[i].stop();\n    }\n    this.activeActions.length = 0;\n  },\n\n  playAction: function () {\n    if (!this.mixer) return;\n\n    const model = this.model,\n      data = this.data,\n      clips = model.animations || (model.geometry || {}).animations || [];\n\n    if (!clips.length) return;\n\n    // const re = wildcardToRegExp(data.clip);\n\n    for (let clip, i = 0; (clip = clips[i]); i++) {\n      if (data.clips.length === 0 || data.clips.includes(clip.name)) {\n        const action = this.mixer.clipAction(clip, model);\n        action.enabled = true;\n        action.clampWhenFinished = data.clampWhenFinished;\n        if (data.duration) action.setDuration(data.duration);\n        if (data.timeScale !== 1) action.setEffectiveTimeScale(data.timeScale);\n        action\n          .setLoop(LoopMode[data.loop], data.repetitions)\n          .fadeIn(data.crossFadeDuration)\n          .play();\n        this.activeActions.push(action);\n      }\n    }\n  },\n\n  tick: function (t, dt) {\n    if (this.mixer && !isNaN(dt)) this.mixer.update(dt / 1000);\n  },\n});\n\n/**\n * Creates a RegExp from the given string, converting asterisks to .* expressions,\n * and escaping all other characters.\n */\nfunction wildcardToRegExp(s) {\n  return new RegExp(\"^\" + s.split(/\\*+/).map(regExpEscape).join(\".*\") + \"$\");\n}\n\n/**\n * RegExp-escapes all characters in the given string.\n */\nfunction regExpEscape(s) {\n  return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\n}\n","const WelcomePanel = ({ onClick }) => {\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"fixed\",\n        zIndex: 100,\n        backgroundColor: \"#ddc57d\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n      }}\n      onClick={() => {\n        const soundEffect = new Audio();\n        soundEffect.autoplay = true;\n\n        // onClick of first interaction on page before I need the sounds\n        // (This is a tiny MP3 file that is silent and extremely short - retrieved from https://bigsoundbank.com and then modified)\n        soundEffect.src =\n          \"data:audio/mpeg;base64,SUQzBAAAAAABEVRYWFgAAAAtAAADY29tbWVudABCaWdTb3VuZEJhbmsuY29tIC8gTGFTb25vdGhlcXVlLm9yZwBURU5DAAAAHQAAA1N3aXRjaCBQbHVzIMKpIE5DSCBTb2Z0d2FyZQBUSVQyAAAABgAAAzIyMzUAVFNTRQAAAA8AAANMYXZmNTcuODMuMTAwAAAAAAAAAAAAAAD/80DEAAAAA0gAAAAATEFNRTMuMTAwVVVVVVVVVVVVVUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQsRbAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQMSkAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV\";\n        onClick?.();\n      }}\n    >\n      <span style={{ flexGrow: 2 }} />\n      <img\n        src=\"https://tezdozen.xyz/images/title.png\"\n        alt=\"logo\"\n        style={{\n          maxHeight: \"30%\",\n          maxWidth: \"70%\",\n          aspectRatio: \"771 / 149\",\n          marginBottom: 20,\n        }}\n      />\n      <span style={{ flexGrow: 1 }} />\n      <span\n        style={{\n          color: \"#00350D\",\n          fontWeight: \"bold\",\n          flexBasis: 1,\n          lineHeight: 1.5,\n          textTransform: \"uppercase\",\n          fontSize: \"1.5rem\",\n        }}\n      >\n        Click to Start\n      </span>\n      <span style={{ flexGrow: 1 }} />\n      <img\n        src=\"/AR-Workshop/target_image/goat.png\"\n        alt=\"goat\"\n        style={{ maxHeight: \"50%\", maxWidth: \"90%\", aspectRatio: \"1\" }}\n      />\n    </div>\n  );\n};\n\nexport default WelcomePanel;\n","import \"./components/mindar-image-target-averaging\";\nimport \"./components/click-interaction\";\nimport \"./components/sound-control\";\nimport \"./components/animation-mixer\";\nimport { useState } from \"react\";\nimport WelcomePanel from \"./components/WelcomePanel\";\n\nconst animals = [\n  \"mouse\",\n  \"ox\",\n  \"tiger\",\n  \"rabbit\",\n  \"dragon\",\n  \"snake\",\n  \"horse\",\n  \"goat\",\n  \"monkey\",\n  \"rooster\",\n  \"dog\",\n  \"pig\",\n];\n\nconst MindARViewer = () => {\n  const [showWelcome, setShowWelcome] = useState(true);\n\n  return (\n    <div className=\"container\">\n      {showWelcome ? (\n        <WelcomePanel\n          onClick={() => {\n            setShowWelcome(false);\n          }}\n        />\n      ) : (\n        <a-scene\n          mindar-image={`imageTargetSrc: /AR-Workshop/targets.mind; maxTrack: 1;`}\n          //   mindar-image=\"imageTargetSrc: /AR-Workshop/targets.mind; autoStart: false; uiLoading: no; uiError: no; uiScanning: no;\"\n          //   embedded\n          color-space=\"sRGB\"\n          renderer=\"colorManagement: true, physicallyCorrectLights\"\n          vr-mode-ui=\"enabled: false\"\n          device-orientation-permission-ui=\"enabled: false\"\n        >\n          <a-assets>\n            <a-asset-item\n              id=\"snow\"\n              src=\"/AR-Workshop/models/snow.glb\"\n            ></a-asset-item>\n            {animals.map((v, i) => (\n              <a-asset-item\n                key={v}\n                id={\"model_\" + v}\n                src={`/AR-Workshop/models/${v}.glb`}\n              ></a-asset-item>\n            ))}\n            <a-asset-item\n              id=\"sound_src\"\n              preload=\"auto\"\n              class=\"a-sound\"\n              src=\"/AR-Workshop/sounds/bgm.mp3\"\n              response-type=\"arraybuffer\"\n            ></a-asset-item>\n            <a-asset-item\n              id=\"sound_src_hohoho\"\n              preload=\"auto\"\n              class=\"a-sound\"\n              src=\"/AR-Workshop/sounds/hohoho.mp3\"\n              response-type=\"arraybuffer\"\n            ></a-asset-item>\n            {animals.map((v, i) => (\n              <a-asset-item\n                id={\"sound_src_\" + v}\n                preload=\"auto\"\n                class=\"a-sound\"\n                key={v}\n                src={`/AR-Workshop/sounds/${v}.mp3`}\n                response-type=\"arraybuffer\"\n              ></a-asset-item>\n            ))}\n          </a-assets>\n          <a-entity light=\"type: ambient; color: #BBB\"></a-entity>\n          <a-entity\n            light=\"type: directional; color: #FFF; intensity: 1\"\n            position=\"0 1 1\"\n          ></a-entity>\n          <a-camera\n            position=\"0 0 0\"\n            look-controls=\"enabled: false\"\n            cursor=\"fuse: false; rayOrigin: mouse;\"\n            raycaster=\"far: 100000; objects: [data-clickable]\"\n          ></a-camera>\n          <a-sound\n            id=\"sound\"\n            src=\"#sound_src\"\n            loop=\"true\"\n            positional=\"false\"\n          ></a-sound>\n          <a-sound\n            id=\"sound_animal\"\n            src=\"\"\n            loop=\"false\"\n            positional=\"false\"\n          ></a-sound>\n          {/* {animals.map((v, i) => (\n            <a-sound\n              id={\"sound_\" + v}\n              src={\"#sound_src_\" + v}\n              key={v}\n              loop=\"false\"\n              positional=\"false\"\n            ></a-sound>\n          ))} */}\n\n          {animals.map((v, i) => (\n            <a-entity\n              key={v}\n              mindar-image-target-averaging={`targetIndex: ${i}`}\n            >\n              <a-gltf-model\n                id={v}\n                rotation=\"0 0 0\"\n                position=\"0 0 0\"\n                scale=\"0.5 0.5 0.5\"\n                src={`#model_${v}`}\n                sound-control\n                // IMPORTANT!!!\n                // If add this component without value, React will give it true instead of the default value!\n                animation-mixer=\"clips: Animation\"\n              ></a-gltf-model>\n              <a-gltf-model\n                id={v + \"_snow\"}\n                rotation=\"0 0 0\"\n                position=\"0 0 0\"\n                scale=\"0.5 0.5 0.5\"\n                src=\"#snow\"\n                animation-mixer=\"clips: Animation\"\n                click-interaction={`animal: ${v}`}\n              ></a-gltf-model>\n            </a-entity>\n          ))}\n        </a-scene>\n      )}\n    </div>\n  );\n};\n\nexport default MindARViewer;\n","import React from \"react\";\nimport \"mind-ar/dist/mindar-image.prod.js\";\nimport \"aframe\";\nimport \"mind-ar/dist/mindar-image-aframe.prod.js\";\n// import \"aframe-extras/dist/aframe-extras.loaders\";\nimport \"./App.css\";\nimport MindARViewer from \"./MindarViewer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <MindARViewer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}