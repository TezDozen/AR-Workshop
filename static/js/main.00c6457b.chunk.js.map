{"version":3,"sources":["components/mindar-image-target-averaging.js","components/click-interaction.js","components/sound-control.js","components/animation-mixer.js","components/WelcomePanel.js","MindarViewer.js","App.js","reportWebVitals.js","index.js"],"names":["AFRAME","registerComponent","dependencies","schema","targetIndex","type","postMatrix","pastPositions","pastScales","init","this","el","sceneEl","systems","registerAnchor","data","root","object3D","visible","matrixAutoUpdate","setupMarker","markerWidth","markerHeight","position","THREE","Vector3","quaternion","Quaternion","scale","x","y","z","Matrix4","compose","updateWorldMatrix","worldMatrix","emit","m","elements","multiply","position0","quaternion0","scale0","matrix","decompose","push","length","slice","forEach","v","add","divideScalar","angleTo","Math","PI","slerp","animal","isAnimationPlaying","isSoundPlaying","component","soundEl","document","querySelector","sound","components","parentNode","addEventListener","e","setAttribute","console","log","removeAttribute","stopSound","model","target","animations","baseAnimation","splice","playSound","sort","random","map","name","modelEl","clips","loop","pauseSound","LoopMode","once","LoopOnce","repeat","LoopRepeat","pingpong","LoopPingPong","multiple","default","duration","clampWhenFinished","crossFadeDuration","oneOf","Object","keys","repetitions","Infinity","min","timeScale","mixer","activeActions","getObject3D","load","detail","AnimationMixer","action","loopDelta","direction","update","remove","stopAllAction","prevData","changes","utils","diff","stopAction","playAction","setDuration","setLoop","setEffectiveTimeScale","i","fadeOut","stop","geometry","clip","includes","clipAction","enabled","fadeIn","play","tick","t","dt","isNaN","WelcomePanel","onClick","style","width","height","zIndex","backgroundColor","display","flexDirection","alignItems","justifyContent","soundEffect","Audio","autoplay","src","flexGrow","alt","maxHeight","maxWidth","aspectRatio","marginBottom","color","fontWeight","flexBasis","lineHeight","textTransform","fontSize","animals","MindARViewer","useState","showWelcome","setShowWelcome","className","renderer","id","preload","class","light","cursor","raycaster","positional","rotation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.00c6457b.chunk.js","sourcesContent":["import AFRAME from \"aframe\";\r\nimport { Vector3, Quaternion, Matrix4 } from \"three\";\r\n\r\nAFRAME.registerComponent(\"mindar-image-target-averaging\", {\r\n  dependencies: [\"mindar-image-system\"],\r\n\r\n  schema: {\r\n    targetIndex: { type: \"number\" },\r\n  },\r\n\r\n  postMatrix: null, // rescale the anchor to make width of 1 unit = physical width of card\r\n\r\n  pastPositions: [],\r\n  pastScales: [],\r\n\r\n  init: function () {\r\n    const arSystem = this.el.sceneEl.systems[\"mindar-image-system\"];\r\n    arSystem.registerAnchor(this, this.data.targetIndex);\r\n\r\n    const root = this.el.object3D;\r\n    root.visible = false;\r\n    root.matrixAutoUpdate = false;\r\n  },\r\n\r\n  setupMarker([markerWidth, markerHeight]) {\r\n    const position = new AFRAME.THREE.Vector3();\r\n    const quaternion = new AFRAME.THREE.Quaternion();\r\n    const scale = new AFRAME.THREE.Vector3();\r\n    position.x = markerWidth / 2;\r\n    position.y = markerWidth / 2 + (markerHeight - markerWidth) / 2;\r\n    scale.x = markerWidth;\r\n    scale.y = markerWidth;\r\n    scale.z = markerWidth;\r\n    this.postMatrix = new AFRAME.THREE.Matrix4();\r\n    this.postMatrix.compose(position, quaternion, scale);\r\n  },\r\n\r\n  updateWorldMatrix(worldMatrix) {\r\n    if (!this.el.object3D.visible && worldMatrix !== null) {\r\n      this.el.emit(\"targetFound\");\r\n    } else if (this.el.object3D.visible && worldMatrix === null) {\r\n      this.el.emit(\"targetLost\");\r\n    }\r\n\r\n    this.el.object3D.visible = worldMatrix !== null;\r\n    if (worldMatrix === null) {\r\n      return;\r\n    }\r\n    var m = new AFRAME.THREE.Matrix4();\r\n    m.elements = worldMatrix;\r\n    m.multiply(this.postMatrix);\r\n\r\n    let position0 = new Vector3();\r\n    let quaternion0 = new Quaternion();\r\n    let scale0 = new Vector3();\r\n    this.el.object3D.matrix.decompose(position0, quaternion0, scale0);\r\n\r\n    let position = new Vector3();\r\n    let quaternion = new Quaternion();\r\n    let scale = new Vector3();\r\n    m.decompose(position, quaternion, scale);\r\n\r\n    this.pastPositions.push(position);\r\n\r\n    if (this.pastPositions.length > 10) {\r\n      this.pastPositions = this.pastPositions.slice(\r\n        this.pastPositions.length - 10,\r\n        this.pastPositions.length\r\n      );\r\n    }\r\n\r\n    position = new Vector3(0, 0, 0);\r\n\r\n    this.pastPositions.forEach((v) => {\r\n      position.add(v);\r\n    });\r\n\r\n    position.divideScalar(this.pastPositions.length);\r\n\r\n    if (quaternion0.angleTo(quaternion) < (Math.PI / 180) * 5) {\r\n      quaternion = quaternion0;\r\n    } else {\r\n      quaternion = quaternion0.slerp(quaternion, 0.2);\r\n    }\r\n\r\n    this.pastScales.push(scale);\r\n\r\n    if (this.pastScales.length > 10) {\r\n      this.pastScales = this.pastScales.slice(\r\n        this.pastScales.length - 10,\r\n        this.pastScales.length\r\n      );\r\n    }\r\n\r\n    scale = new Vector3(0, 0, 0);\r\n\r\n    this.pastScales.forEach((v) => {\r\n      scale.add(v);\r\n    });\r\n\r\n    scale.divideScalar(this.pastScales.length);\r\n\r\n    this.el.object3D.matrix = new Matrix4().compose(\r\n      position,\r\n      quaternion,\r\n      scale\r\n    );\r\n  },\r\n});\r\n","import { registerComponent, THREE } from \"aframe\";\r\n\r\nregisterComponent(\"click-interaction\", {\r\n  schema: {\r\n    animal: { type: \"string\" },\r\n  },\r\n\r\n  isAnimationPlaying: false,\r\n\r\n  isSoundPlaying: false,\r\n\r\n  init: function () {\r\n    const el = this.el;\r\n    const animal = this.data.animal;\r\n    let component = this;\r\n    let soundEl = document.querySelector(`#sound_animal`);\r\n    let sound = soundEl.components.sound;\r\n\r\n    el.parentNode.addEventListener(\"targetFound\", (e) => {\r\n      soundEl.setAttribute(\"src\", `#sound_src_${animal}`);\r\n      el.setAttribute(\"data-clickable\", \"\");\r\n      console.log(\"targetFound\");\r\n    });\r\n\r\n    el.parentNode.addEventListener(\"targetLost\", () => {\r\n      el.removeAttribute(\"data-clickable\");\r\n      sound.stopSound();\r\n      this.isSoundPlaying = false;\r\n      console.log(\"targetLost\");\r\n    });\r\n\r\n    if (animal === \"goat\") {\r\n      document.querySelector(`#goat`).addEventListener(\"model-loaded\", (e) => {\r\n        let model = e.target.components[\"gltf-model\"].model;\r\n        component.animations = [...model.animations];\r\n        component.baseAnimation = component.animations.splice(0, 1);\r\n      });\r\n    }\r\n\r\n    el.addEventListener(\"click\", function (e) {\r\n      // console.log(\"clicked\");\r\n      if (component.isAnimationPlaying || component.isSoundPlaying) {\r\n        console.log(\"ignore, is playing\");\r\n        return;\r\n      }\r\n\r\n      sound.playSound();\r\n      component.isSoundPlaying = true;\r\n\r\n      soundEl.addEventListener(\"sound-ended\", () => {\r\n        console.log(\"sound ended\");\r\n        component.isSoundPlaying = false;\r\n      });\r\n\r\n      if (animal === \"goat\") {\r\n        component.animations.sort(() => Math.random() - 0.5);\r\n        console.log(component.animations.slice(0, 3).map((v) => v.name));\r\n        component.isAnimationPlaying = true;\r\n\r\n        const modelEl = document.querySelector(\"#goat\");\r\n        modelEl.setAttribute(\"animation-mixer__0\", {\r\n          clips: component.animations.slice(0, 3).map((v) => v.name),\r\n          loop: \"once\",\r\n        });\r\n\r\n        modelEl.addEventListener(\"animation-finished\", () => {\r\n          component.isAnimationPlaying = false;\r\n        });\r\n      }\r\n    });\r\n  },\r\n});\r\n","import { registerComponent } from \"aframe\";\r\n\r\nregisterComponent(\"sound-control\", {\r\n  init: function () {\r\n    const el = this.el;\r\n    let sound = document.querySelector(\"#sound\").components.sound;\r\n    el.parentNode.addEventListener(\"targetFound\", (e) => {\r\n      sound.playSound();\r\n    });\r\n    el.parentNode.addEventListener(\"targetLost\", () => {\r\n      sound.pauseSound();\r\n    });\r\n  },\r\n});\r\n","import { registerComponent, THREE, utils } from \"aframe\";\r\n\r\nconst LoopMode = {\r\n  once: THREE.LoopOnce,\r\n  repeat: THREE.LoopRepeat,\r\n  pingpong: THREE.LoopPingPong,\r\n};\r\n\r\n/**\r\n * animation-mixer\r\n *\r\n * Player for animation clips. Intended to be compatible with any model format that supports\r\n * skeletal or morph animations through THREE.AnimationMixer.\r\n * See: https://threejs.org/docs/?q=animation#Reference/Animation/AnimationMixer\r\n */\r\nregisterComponent(\"animation-mixer\", {\r\n  multiple: true,\r\n  schema: {\r\n    clips: { default: [], type: \"array\" },\r\n    duration: { default: 0 },\r\n    clampWhenFinished: { default: false, type: \"boolean\" },\r\n    crossFadeDuration: { default: 0 },\r\n    loop: { default: \"repeat\", oneOf: Object.keys(LoopMode) },\r\n    repetitions: { default: Infinity, min: 0 },\r\n    timeScale: { default: 1 },\r\n  },\r\n\r\n  init: function () {\r\n    /** @type {THREE.Mesh} */\r\n    this.model = null;\r\n    /** @type {THREE.AnimationMixer} */\r\n    this.mixer = null;\r\n    /** @type {Array<THREE.AnimationAction>} */\r\n    this.activeActions = [];\r\n\r\n    const model = this.el.getObject3D(\"mesh\");\r\n\r\n    if (model) {\r\n      this.load(model);\r\n    } else {\r\n      this.el.addEventListener(\"model-loaded\", (e) => {\r\n        this.load(e.detail.model);\r\n      });\r\n    }\r\n  },\r\n\r\n  load: function (model) {\r\n    const el = this.el;\r\n    this.model = model;\r\n    this.mixer = new THREE.AnimationMixer(model);\r\n    this.mixer.addEventListener(\"loop\", (e) => {\r\n      el.emit(\"animation-loop\", { action: e.action, loopDelta: e.loopDelta });\r\n    });\r\n    this.mixer.addEventListener(\"finished\", (e) => {\r\n      el.emit(\"animation-finished\", {\r\n        action: e.action,\r\n        direction: e.direction,\r\n      });\r\n    });\r\n    if (this.data.clips) this.update({});\r\n  },\r\n\r\n  remove: function () {\r\n    if (this.mixer) this.mixer.stopAllAction();\r\n  },\r\n\r\n  update: function (prevData) {\r\n    if (!prevData) return;\r\n\r\n    const data = this.data;\r\n    const changes = utils.diff(data, prevData);\r\n\r\n    // If selected clips have changed, restart animation.\r\n    if (\"clips\" in changes) {\r\n      this.stopAction();\r\n      if (data.clips) this.playAction();\r\n      return;\r\n    }\r\n\r\n    // Otherwise, modify running actions.\r\n    this.activeActions.forEach((action) => {\r\n      if (\"duration\" in changes && data.duration) {\r\n        action.setDuration(data.duration);\r\n      }\r\n      if (\"clampWhenFinished\" in changes) {\r\n        action.clampWhenFinished = data.clampWhenFinished;\r\n      }\r\n      if (\"loop\" in changes || \"repetitions\" in changes) {\r\n        action.setLoop(LoopMode[data.loop], data.repetitions);\r\n      }\r\n      if (\"timeScale\" in changes) {\r\n        action.setEffectiveTimeScale(data.timeScale);\r\n      }\r\n    });\r\n  },\r\n\r\n  stopAction: function () {\r\n    const data = this.data;\r\n    for (let i = 0; i < this.activeActions.length; i++) {\r\n      data.crossFadeDuration\r\n        ? this.activeActions[i].fadeOut(data.crossFadeDuration)\r\n        : this.activeActions[i].stop();\r\n    }\r\n    this.activeActions.length = 0;\r\n  },\r\n\r\n  playAction: function () {\r\n    if (!this.mixer) return;\r\n\r\n    const model = this.model,\r\n      data = this.data,\r\n      clips = model.animations || (model.geometry || {}).animations || [];\r\n\r\n    if (!clips.length) return;\r\n\r\n    // const re = wildcardToRegExp(data.clip);\r\n\r\n    for (let clip, i = 0; (clip = clips[i]); i++) {\r\n      if (data.clips.length === 0 || data.clips.includes(clip.name)) {\r\n        const action = this.mixer.clipAction(clip, model);\r\n        action.enabled = true;\r\n        action.clampWhenFinished = data.clampWhenFinished;\r\n        if (data.duration) action.setDuration(data.duration);\r\n        if (data.timeScale !== 1) action.setEffectiveTimeScale(data.timeScale);\r\n        action\r\n          .setLoop(LoopMode[data.loop], data.repetitions)\r\n          .fadeIn(data.crossFadeDuration)\r\n          .play();\r\n        this.activeActions.push(action);\r\n      }\r\n    }\r\n  },\r\n\r\n  tick: function (t, dt) {\r\n    if (this.mixer && !isNaN(dt)) this.mixer.update(dt / 1000);\r\n  },\r\n});\r\n\r\n/**\r\n * Creates a RegExp from the given string, converting asterisks to .* expressions,\r\n * and escaping all other characters.\r\n */\r\nfunction wildcardToRegExp(s) {\r\n  return new RegExp(\"^\" + s.split(/\\*+/).map(regExpEscape).join(\".*\") + \"$\");\r\n}\r\n\r\n/**\r\n * RegExp-escapes all characters in the given string.\r\n */\r\nfunction regExpEscape(s) {\r\n  return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\r\n}\r\n","const WelcomePanel = ({ onClick }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        position: \"fixed\",\r\n        zIndex: 100,\r\n        backgroundColor: \"#ddc57d\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n      }}\r\n      onClick={() => {\r\n        const soundEffect = new Audio();\r\n        soundEffect.autoplay = true;\r\n\r\n        // onClick of first interaction on page before I need the sounds\r\n        // (This is a tiny MP3 file that is silent and extremely short - retrieved from https://bigsoundbank.com and then modified)\r\n        soundEffect.src =\r\n          \"data:audio/mpeg;base64,SUQzBAAAAAABEVRYWFgAAAAtAAADY29tbWVudABCaWdTb3VuZEJhbmsuY29tIC8gTGFTb25vdGhlcXVlLm9yZwBURU5DAAAAHQAAA1N3aXRjaCBQbHVzIMKpIE5DSCBTb2Z0d2FyZQBUSVQyAAAABgAAAzIyMzUAVFNTRQAAAA8AAANMYXZmNTcuODMuMTAwAAAAAAAAAAAAAAD/80DEAAAAA0gAAAAATEFNRTMuMTAwVVVVVVVVVVVVVUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQsRbAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQMSkAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV\";\r\n        onClick?.();\r\n      }}\r\n    >\r\n      <span style={{ flexGrow: 2 }} />\r\n      <img\r\n        src=\"https://tezdozen.xyz/images/title.png\"\r\n        alt=\"logo\"\r\n        style={{\r\n          maxHeight: \"30%\",\r\n          maxWidth: \"70%\",\r\n          aspectRatio: \"771 / 149\",\r\n          marginBottom: 20,\r\n        }}\r\n      />\r\n      <span style={{ flexGrow: 1 }} />\r\n      <span\r\n        style={{\r\n          color: \"#00350D\",\r\n          fontWeight: \"bold\",\r\n          flexBasis: 1,\r\n          lineHeight: 1.5,\r\n          textTransform: \"uppercase\",\r\n          fontSize: \"1.5rem\",\r\n        }}\r\n      >\r\n        Click to Start\r\n      </span>\r\n      <span style={{ flexGrow: 1 }} />\r\n      <img\r\n        src=\"/AR-Workshop/target_image/goat.png\"\r\n        alt=\"goat\"\r\n        style={{ maxHeight: \"50%\", maxWidth: \"90%\", aspectRatio: \"1\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomePanel;\r\n","import \"./components/mindar-image-target-averaging\";\r\nimport \"./components/click-interaction\";\r\nimport \"./components/sound-control\";\r\nimport \"./components/animation-mixer\";\r\nimport AFRAME from \"aframe\";\r\nimport { useState } from \"react\";\r\nimport WelcomePanel from \"./components/WelcomePanel\";\r\n\r\nAFRAME.registerComponent(\"model-adjustment\", {\r\n  init: function () {\r\n    this.el.addEventListener(\"model-loaded\", (e) => {\r\n      // console.log(this.el.components[\"gltf-model\"]);\r\n      const obj = this.el.getObject3D(\"mesh\");\r\n      // Go over the submeshes and modify materials we want.\r\n      // obj.traverse((node) => {\r\n      //   // console.log(node.name);\r\n      //   if (node.name.includes(\"particle\")) {\r\n      //     node.material = new THREE.MeshBasicMaterial({ color: 0xffffff });\r\n      //   }\r\n      //   if (node.name === \"Plane011\") {\r\n      //     node.material = new THREE.MeshStandardMaterial({ color: 0x777777 });\r\n      //   }\r\n      //   if (node.material && node.material?.name?.includes(\"mat\")) {\r\n      //     // node.material = new THREE.MeshBasicMaterial({\r\n      //     //   color: 0xffffff,\r\n      //     //   map: node.material.map,\r\n      //     // });\r\n      //     node.material.depthWrite = true;\r\n      //     node.material.transparent = false;\r\n      //     node.material.alphaTest = 0.5;\r\n      //     node.material.alphaWrite = false;\r\n      //     node.material.flatShading = true;\r\n      //     // console.log(node.material);\r\n      //   }\r\n      // });\r\n    });\r\n  },\r\n});\r\n\r\nconst animals = [\r\n  \"mouse\",\r\n  \"ox\",\r\n  \"tiger\",\r\n  \"rabbit\",\r\n  \"dragon\",\r\n  \"snake\",\r\n  \"horse\",\r\n  \"goat\",\r\n  \"monkey\",\r\n  \"rooster\",\r\n  \"dog\",\r\n  \"pig\",\r\n];\r\n\r\nconst MindARViewer = () => {\r\n  const [showWelcome, setShowWelcome] = useState(true);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {showWelcome ? (\r\n        <WelcomePanel\r\n          onClick={() => {\r\n            setShowWelcome(false);\r\n          }}\r\n        />\r\n      ) : (\r\n        <a-scene\r\n          mindar-image={`imageTargetSrc: /AR-Workshop/targets.mind; maxTrack: 1;`}\r\n          //   mindar-image=\"imageTargetSrc: /AR-Workshop/targets.mind; autoStart: false; uiLoading: no; uiError: no; uiScanning: no;\"\r\n          //   embedded\r\n          color-space=\"sRGB\"\r\n          renderer=\"colorManagement: true, physicallyCorrectLights\"\r\n          vr-mode-ui=\"enabled: false\"\r\n          device-orientation-permission-ui=\"enabled: false\"\r\n        >\r\n          <a-assets>\r\n            <a-asset-item\r\n              id=\"snow\"\r\n              src=\"/AR-Workshop/models/snow.glb\"\r\n            ></a-asset-item>\r\n            {animals.map((v, i) => (\r\n              <a-asset-item\r\n                key={v}\r\n                id={\"model_\" + v}\r\n                src={`/AR-Workshop/models/${v}.glb`}\r\n              ></a-asset-item>\r\n            ))}\r\n            <a-asset-item\r\n              id=\"sound_src\"\r\n              preload=\"auto\"\r\n              class=\"a-sound\"\r\n              src=\"/AR-Workshop/sound.m4a\"\r\n              response-type=\"arraybuffer\"\r\n            ></a-asset-item>\r\n            {animals.map((v, i) => (\r\n              <a-asset-item\r\n                id={\"sound_src_\" + v}\r\n                preload=\"auto\"\r\n                class=\"a-sound\"\r\n                key={v}\r\n                src={`/AR-Workshop/sounds/${v}.mp3`}\r\n                response-type=\"arraybuffer\"\r\n              ></a-asset-item>\r\n            ))}\r\n          </a-assets>\r\n          <a-entity light=\"type: ambient; color: #BBB\"></a-entity>\r\n          <a-entity\r\n            light=\"type: directional; color: #FFF; intensity: 1\"\r\n            position=\"0 1 1\"\r\n          ></a-entity>\r\n          <a-camera\r\n            position=\"0 0 0\"\r\n            look-controls=\"enabled: false\"\r\n            cursor=\"fuse: false; rayOrigin: mouse;\"\r\n            raycaster=\"far: 100000; objects: [data-clickable]\"\r\n          ></a-camera>\r\n          <a-sound\r\n            id=\"sound\"\r\n            src=\"#sound_src\"\r\n            loop=\"true\"\r\n            positional=\"false\"\r\n          ></a-sound>\r\n          <a-sound\r\n            id=\"sound_animal\"\r\n            src=\"\"\r\n            loop=\"false\"\r\n            positional=\"false\"\r\n          ></a-sound>\r\n          {/* {animals.map((v, i) => (\r\n            <a-sound\r\n              id={\"sound_\" + v}\r\n              src={\"#sound_src_\" + v}\r\n              key={v}\r\n              loop=\"false\"\r\n              positional=\"false\"\r\n            ></a-sound>\r\n          ))} */}\r\n\r\n          {animals.map((v, i) => (\r\n            <a-entity\r\n              key={v}\r\n              mindar-image-target-averaging={`targetIndex: ${i}`}\r\n            >\r\n              <a-gltf-model\r\n                id={v}\r\n                rotation=\"0 0 0\"\r\n                position=\"0 0 0\"\r\n                scale=\"0.5 0.5 0.5\"\r\n                src={`#model_${v}`}\r\n                sound-control\r\n                // IMPORTANT!!!\r\n                // If add this component without value, React will give it true instead of the default value!\r\n                animation-mixer=\"clips: Animation\"\r\n              ></a-gltf-model>\r\n              <a-gltf-model\r\n                id={v + \"_snow\"}\r\n                rotation=\"0 0 0\"\r\n                position=\"0 0 0\"\r\n                scale=\"0.5 0.5 0.5\"\r\n                src=\"#snow\"\r\n                animation-mixer=\"clips: Animation\"\r\n                click-interaction={`animal: ${v}`}\r\n              ></a-gltf-model>\r\n            </a-entity>\r\n          ))}\r\n        </a-scene>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MindARViewer;\r\n","import React from \"react\";\r\nimport \"mind-ar/dist/mindar-image.prod.js\";\r\nimport \"aframe\";\r\nimport \"mind-ar/dist/mindar-image-aframe.prod.js\";\r\n// import \"aframe-extras/dist/aframe-extras.loaders\";\r\nimport \"./App.css\";\r\nimport MindARViewer from \"./MindarViewer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <MindARViewer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}